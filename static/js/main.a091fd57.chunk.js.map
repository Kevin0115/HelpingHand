{"version":3,"sources":["logo.png","utils/Const.js","components/QR.js","components/Main.js","components/Merchant.js","components/Donate.js","components/Register.js","components/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","API_BASE","QR","props","value","this","rid","React","Component","Main","className","Button","variant","size","as","Link","to","Merchant","state","balance","amount","mid","showAlert","handleChange","bind","handlePurchase","fetchBalance","fetch","method","then","res","json","setState","content","catch","error","console","log","e","target","name","final","parseFloat","toFixed","preventDefault","headers","body","JSON","stringify","success","alert","clearForm","setTimeout","Card","Header","Body","Text","Form","inline","FormControl","type","placeholder","onChange","renderFinal","onClick","disabled","Alert","show","onClose","dismissible","Heading","Donate","showModal","cardNumber","expiryDate","handleClick","handleDonate","messageForm","reset","Modal","onHide","Title","ref","form","onSubmit","handleSubmit","Group","Label","Control","Footer","Register","pin","question","answer","handleRegister","uname","renderQR","Navigator","useParams","user","Navigation","Navbar","bg","Brand","src","require","width","height","alt","Toggle","aria-controls","Collapse","id","exact","path","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a091fd57.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.46cae660.png\";","// API Endpoints\r\n// export const API_BASE = 'http://localhost:8080/';\r\nexport const API_BASE = 'https://helpinghand.vercel.app/';\r\n\r\nexport const CLIENT_URL = 'https://www.kevinchoi.dev/HelpingHand/#/receiver/';\r\n\r\n// API Method\r\nexport const POST = 'POST';\r\nexport const GET = 'GET';\r\nexport const DELETE = 'DELETE';","import React from 'react';\r\nimport QRCode from 'qrcode.react';\r\nimport { CLIENT_URL } from '../utils/Const'; \r\n\r\nclass QR extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <QRCode value={CLIENT_URL + this.props.rid} />\r\n    );\r\n  }\r\n}\r\n\r\nexport default QR;","import React from 'react';\r\nimport {\r\n  Link,\r\n} from 'react-router-dom';\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  NavDropdown,\r\n  Button,\r\n} from 'react-bootstrap';\r\n\r\nclass Main extends React.Component {\r\n  render() {\r\n    return(\r\n      <div className=\"main\">\r\n        <h2>I am a...</h2>\r\n        <Button\r\n          className=\"nav-button\"\r\n          variant=\"primary\"\r\n          size=\"lg\"\r\n          as={Link} to={\"/donate/\" + this.props.rid}\r\n        >\r\n          Giver\r\n        </Button>\r\n        <Button\r\n          className=\"nav-button\"\r\n          variant=\"primary\"\r\n          size=\"lg\"\r\n          as={Link} to={\"/merchant/\" + this.props.rid}\r\n        >\r\n          Merchant\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport { API_BASE, GET, POST } from '../utils/Const';\r\nimport { Card, Form, FormControl, Button, Alert } from 'react-bootstrap';\r\nimport './Components.css';\r\n\r\nclass Merchant extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      balance: null,\r\n      amount: 0,\r\n      mid: null,\r\n      showAlert: false,\r\n    }\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handlePurchase = this.handlePurchase.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchBalance();\r\n  }\r\n\r\n  fetchBalance() {\r\n    fetch(API_BASE + 'receiver/' + this.props.rid, {\r\n      method: GET\r\n    })\r\n    .then(res => res.json())\r\n    .then(json => {\r\n      this.setState({balance: json.content.balance});\r\n    })\r\n    .catch(function(error) {\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({[e.target.name]: e.target.value});\r\n  }\r\n\r\n  renderFinal() {\r\n    const final = this.state.balance - this.state.amount;\r\n    if (final < 0) {\r\n      return 'Insufficient Funds.';\r\n    } else {\r\n      return parseFloat(final).toFixed(2);\r\n    }\r\n  }\r\n\r\n  handlePurchase(e) {\r\n    e.preventDefault();\r\n    const { mid, amount } = this.state;\r\n    const { rid } = this.props;\r\n    fetch(API_BASE + 'transaction', {\r\n      method: POST,\r\n      headers: {\r\n      'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        amount: amount,\r\n        rid: rid,\r\n        mid: mid\r\n      })\r\n    })\r\n    .then(res => res.json())\r\n    .then(json => {\r\n      this.fetchBalance();\r\n      if (json.success) {\r\n        this.alert();\r\n      }\r\n      this.clearForm();\r\n    })\r\n    .catch(function(error) {\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  clearForm() {\r\n    this.setState({\r\n      mid: null,\r\n      amount: 0,\r\n    });\r\n  }\r\n\r\n  alert() {\r\n    this.setState({\r\n      showAlert: true,\r\n    });\r\n    setTimeout((() => this.setState({showAlert: false})), 5000);\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"merchant\">\r\n        <h5>Checkout</h5>\r\n        <Card className=\"card\">\r\n          <Card.Header className=\"card-title\">Transaction Details</Card.Header>\r\n          <Card.Body className=\"card-body\">\r\n            <Card.Text>Current Balance: {this.state.balance}</Card.Text>\r\n            <div className=\"amount\">\r\n              <Card.Text>Cost: </Card.Text>\r\n              <Form inline>\r\n                <FormControl type=\"number\" name=\"amount\" placeholder=\"Amount ($)\" className=\"input\" onChange={this.handleChange} />\r\n              </Form>\r\n            </div>\r\n            <div className=\"merchant-input\">\r\n              <Card.Text>Merchant ID: </Card.Text>\r\n              <Form inline>\r\n                <FormControl type=\"text\" name=\"mid\" placeholder=\"111111\" className=\"input\" onChange={this.handleChange} />\r\n              </Form>\r\n            </div>\r\n            <Card.Text>Final Balance: {this.renderFinal()}</Card.Text>\r\n            <Button\r\n              variant=\"success\"\r\n              onClick={this.handlePurchase}\r\n              disabled={this.state.amount == null || this.state.amount <= 0 || this.state.balance < this.state.amount}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Card.Body>\r\n        </Card>\r\n        <Alert className=\"alert\" show={this.state.showAlert} variant=\"success\" onClose={() => this.setState({showAlert: false})} dismissible>\r\n          <Alert.Heading>Success</Alert.Heading>\r\n          <p>Your purchase has been completed!</p>\r\n        </Alert>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Merchant;","import React from 'react';\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  NavDropdown,\r\n  Alert,\r\n  Button,\r\n  Form,\r\n  FormControl,\r\n  Modal,\r\n} from 'react-bootstrap';\r\nimport './Components.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE, POST } from '../utils/Const';\r\n\r\nclass Donate extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rid: null,\r\n      amount: 0,\r\n      showModal: false,\r\n      showAlert: false,\r\n      name: null,\r\n      cardNumber: null,\r\n      expiryDate: null\r\n    }\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleDonate = this.handleDonate.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({rid: this.props.rid});\r\n  }\r\n\r\n  handleClick(e) {\r\n    e.preventDefault();\r\n    this.setState({amount: e.target.value});\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({[e.target.name]: e.target.value});\r\n  }\r\n\r\n  clearForm() {\r\n    this.setState({\r\n      name: null,\r\n      cardNumber: null,\r\n      expiryDate: null,\r\n      amount: 0\r\n    });\r\n    this.messageForm.reset();\r\n  }\r\n\r\n  alert() {\r\n    this.setState({\r\n      showAlert: true,\r\n      showModal: false\r\n    });\r\n    setTimeout((() => this.setState({showAlert: false})), 5000);\r\n  }\r\n\r\n  handleDonate(e) {\r\n    e.preventDefault();\r\n    const { name, cardNumber, expiryDate, rid, amount } = this.state;\r\n    fetch(API_BASE + 'donation', {\r\n      method: POST,\r\n      headers: {\r\n      'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        amount: amount,\r\n        rid: rid\r\n      })\r\n    })\r\n    .then(res => res.json())\r\n    .then(json => {\r\n      if (json.success) {\r\n        this.alert();\r\n      }\r\n      this.clearForm();\r\n    })\r\n    .catch(function(error) {\r\n      console.log(error);\r\n      // this.alert(false);\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"donate\">\r\n        <h5>Select a Donation Amount</h5>\r\n        <p>Donations under $1 are not accepted.</p>\r\n        <div className=\"buttons\">\r\n          <Button className=\"select-button\" variant=\"primary\" onClick={this.handleClick} value={2}>$2</Button>\r\n          <Button className=\"select-button\" variant=\"primary\" onClick={this.handleClick} value={5}>$5</Button>\r\n          <Button className=\"select-button\" variant=\"primary\" onClick={this.handleClick} value={10}>$10</Button>\r\n          <Button className=\"select-button\" variant=\"primary\" onClick={this.handleClick} value={20}>$20</Button>\r\n          <Form inline>\r\n            <FormControl type=\"number\" name=\"amount\" placeholder=\"Custom\" className=\"mr-sm-2\" onChange={this.handleChange} />\r\n          </Form>\r\n        </div>\r\n        <h6>Amount: ${this.state.amount}</h6>\r\n        <Button\r\n          className=\"proceed\"\r\n          size=\"lg\"\r\n          variant=\"success\"\r\n          onClick={() => this.setState({showModal: true})}\r\n          disabled={this.state.amount < 1}\r\n        >\r\n          Proceed\r\n        </Button>\r\n        <Modal show={this.state.showModal} onHide={() => this.setState({showModal: false})}>\r\n          <Modal.Header>\r\n            <Modal.Title>Payment</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <p>\r\n              Please enter your credit card information.\r\n            </p>\r\n            <form className=\"form\" ref={ form => this.messageForm = form } onSubmit={this.handleSubmit}>\r\n              <Form.Group>\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control type=\"text\" name=\"name\" onChange={this.handleChange} placeholder=\"John Appleseed\" />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Label>Credit Card Number</Form.Label>\r\n                <Form.Control type=\"number\" name=\"cardNumber\" onChange={this.handleChange} placeholder=\"4800888800008888\"/>\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Label>Expiration Date</Form.Label>\r\n                <Form.Control type=\"date\" name=\"expiryDate\" onChange={this.handleChange} placeholder=\"2020-02-02\" />\r\n              </Form.Group>\r\n            </form>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={() => this.setState({showModal: false})}>\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              variant=\"success\"\r\n              onClick={this.handleDonate}\r\n              disabled={this.state.name == null || this.state.cardNumber == null || this.state.expiryDate == null}\r\n            >\r\n              Donate\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        <Alert className=\"alert\" show={this.state.showAlert} variant=\"success\" onClose={() => this.setState({showAlert: false})} dismissible>\r\n          <Alert.Heading>Success</Alert.Heading>\r\n          <p>Your donation has been accepted!</p>\r\n        </Alert>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Donate;","import React from 'react';\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  NavDropdown,\r\n  Alert,\r\n  Button,\r\n  Form,\r\n  FormControl,\r\n  Modal,\r\n} from 'react-bootstrap';\r\nimport './Components.css';\r\nimport QR from './QR';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE, POST } from '../utils/Const';\r\n\r\nclass Register extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: null,\r\n      pin: null,\r\n      question: null,\r\n      answer: null,\r\n      rid: null,\r\n    }\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({[e.target.name]: e.target.value});\r\n  }\r\n\r\n  handleRegister(e) {\r\n    e.preventDefault();\r\n    const { name, pin, question, answer } = this.state;\r\n    fetch(API_BASE + 'receiver', {\r\n      method: POST,\r\n      headers: {\r\n      'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        uname: name,\r\n        pin: pin,\r\n        question: question,\r\n        answer: answer,\r\n      })\r\n    })\r\n    .then(res => res.json())\r\n    .then(json => {\r\n      this.setState({rid: json.content});\r\n    })\r\n    .catch(function(error) {\r\n      console.log(error);\r\n      // this.alert(false);\r\n    })\r\n  }\r\n\r\n  renderQR() {\r\n    if (this.state.rid == null) {\r\n      return null;\r\n    } else {\r\n      return(\r\n        <div className=\"qr\">\r\n          <QR rid={this.state.rid} />\r\n          <p>Print this and give to Receiver.</p>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"register\">\r\n        <h5>Register new Receiver</h5>\r\n        <form className=\"form\" ref={ form => this.messageForm = form } onSubmit={this.handleSubmit}>\r\n          <Form.Group>\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control type=\"text\" name=\"name\" onChange={this.handleChange} placeholder=\"John Appleseed\" />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>PIN</Form.Label>\r\n            <Form.Control type=\"number\" name=\"pin\" onChange={this.handleChange} placeholder=\"1234\"/>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Security Question (optional)</Form.Label>\r\n            <Form.Control type=\"text\" name=\"question\" onChange={this.handleChange} placeholder=\"\" />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Security Answer (optional)</Form.Label>\r\n            <Form.Control type=\"text\" name=\"answer\" onChange={this.handleChange} placeholder=\"\" />\r\n          </Form.Group>\r\n        </form>\r\n        <Button\r\n          variant=\"success\"\r\n          onClick={this.handleRegister}\r\n          disabled={this.state.name == null || this.state.pin == null}\r\n        >\r\n          Register\r\n        </Button>\r\n        {this.renderQR()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;","import React, { useState } from 'react';\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useParams,\r\n  Redirect\r\n} from 'react-router-dom';\r\nimport { withRouter } from \"react-router\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  NavDropdown,\r\n  Button,\r\n} from 'react-bootstrap';\r\nimport QR from './QR';\r\nimport './Components.css';\r\n\r\nimport './Navigation.css';\r\n\r\nimport Main from './Main';\r\nimport Merchant from './Merchant';\r\nimport Donate from './Donate';\r\nimport Register from './Register';\r\n\r\nconst BASENAME = \"/HelpingHand/\"\r\n\r\nclass Navigation extends React.Component {\r\n  render() {\r\n    return(\r\n      <Router>\r\n        <Navbar bg=\"dark\" variant=\"dark\">\r\n          <Navbar.Brand>\r\n            <Link to=\"/\">\r\n              <img\r\n                src={require('../logo.png')}\r\n                width=\"30\"\r\n                height=\"30\"\r\n                className=\"d-inline-block align-top\"\r\n                alt=\" \"\r\n              />\r\n            </Link>\r\n            {' Helping Hand (v1.8) '}\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-end\">\r\n            <Link to=\"/register/\">\r\n              Register\r\n            </Link>\r\n            {/* <Nav.Link to=\"/register/\">\r\n              Register\r\n            </Nav.Link> */}\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Navigator />\r\n          </Route>\r\n          <Route path={\"/register\"}>\r\n            <Register />\r\n          </Route>\r\n          <Route path={\"/:user/:rid\"}>\r\n            <Navigator />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Navigator() {\r\n  const { rid, user } = useParams();\r\n  switch (user) {\r\n    case 'donate' :\r\n      return <Donate rid={rid} />\r\n    case 'merchant' :\r\n      return <Merchant rid={rid} />\r\n    default:\r\n      return <Main rid={rid} />\r\n  }\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport Navigation from './components/Navigation';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <Navigation />\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}